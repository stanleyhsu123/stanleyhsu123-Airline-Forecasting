---
title: "FLT Forecasting"
author: "Stanley Hsu"
date: "2024-02-27"
output: html_document
---

```{r}
library(tidyverse)
rescaled = read_csv("data_rescaled.csv")
rescaled
```

```{r}
ts_pax = ts(rescaled$`Pax (in millions)`, start = c(2003, 1), end = c(2023, 9), 
            frequency = 12)
boxplot(ts_pax~cycle(ts_pax), main="Check Seasonality of PAX", ylab="PAX in Millions")

ts_flt = ts(rescaled$`Flt (in millions)`, start = c(2003, 1), end = c(2023, 9), 
            frequency = 12)
boxplot(ts_flt~cycle(ts_flt), main="Check Seasonality of FLT", ylab="flt in Millions")

ts_rpm = ts(rescaled$`RPM (in millions)`, start = c(2003, 1), end = c(2023, 9), 
            frequency = 12)
boxplot(ts_rpm~cycle(ts_rpm), main="Check Seasonality of RPM", ylab="RPM in Millions")

ts_asm = ts(rescaled$`ASM (in millions)`, start = c(2003, 1), end = c(2023, 9), 
            frequency = 12)
boxplot(ts_asm~cycle(ts_asm), main="Check Seasonality of ASM", ylab="ASM in Millions")
```


```{r}
acf(ts_pax, lag.max=50)
acf(diff(ts_pax, lag=1), lag.max=50)
acf(diff(ts_pax, lag=12), lag.max=50, main="Cyclical trend not completely removed")
# Do seasonal differencing of the regular differencing 
acf(diff(diff(ts_pax, lag=1), lag=12), lag.max=50, main="Seasonal diff of Regular diff. Leaves ACF of stationary random term" )
```

Forecast PAX (# of Passengers)

The idea is to use pre-covid data to train model and forecast 

```{r}
ts_pax = ts(rescaled$`Pax (in millions)`, start = c(2003, 1), end = c(2023, 9), 
            frequency = 12)
# use data before 2019/1 as training
training=window(ts_pax, end=c(2019,1), frequency=12)
# use data from 2019/2 to 2020/2 as test
test=window(ts_pax, start=c(2019,2), end=c(2020,2), frequency=12)
test
```

```{r}
model1=arima(training,order=c(0,1,1), seas=list(order=c(0,1,1), 12))
model1

RMSE.of.fit = sqrt(model1$sigma2)
RMSE.of.fit

range(rescaled$`Pax (in millions)`)

acf(residuals(model1), lag.max=50) 
```

```{R}
forecast=predict(model1,n.ahead=60,se.fit=TRUE)

pcil=ts((forecast$pred-1.96*forecast$se),start=c(2019,2),freq=12)
pciu=ts((forecast$pred+1.96*forecast$se),start=c(2019,2),freq=12)

predictions=ts(cbind(pcil, test, forecast$pred, pciu), start=c(2019,2),frequency=12)


ts.plot(cbind(ts_pax, test, forecast$pred, pcil, pciu), ylim = c(0, 120),
        lty=c(1,1,1,3,3), col=c("black","black","red","blue","blue"),main="plot",
        ylab="pax (in millions)", lwd=2)
legend("bottomleft", legend = c("Ground Truth", "Prediction", "95% Confidence Interval"), col = c("black", "red", "blue"), lty = c(1, 1, 3))
```

```{r}
#ts.plot(ts_pax, lwd = 2, ylim = c(0, 110), ylab = "PAX (in millions)", main = "Original Data")
shortts=window(ts_pax, start=c(2015,1), end=c(2023,9), freq=12)
ts.plot(cbind(shortts,test,forecast$pred,pcil,pciu), 
        lty=c(1,1,1,3,3), col=c("black","black","red","blue","blue"), 
        main="Closeup view\n of forecast", lwd=2,
        ylab="Pax (millions)")

legend("bottomleft", legend = c("Ground Truth", "Prediction", "95% Confidence Interval"), col = c("black", "red", "blue"), lty = c(1, 1, 3))

summary(ts_pax)

```
